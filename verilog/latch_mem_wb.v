// File: latch_mem_wb.v
// Generated by MyHDL 0.7
// Date: Sat Dec 22 14:25:04 2012


`timescale 1ns/10ps

module latch_mem_wb (
    clk,
    rst,
    ram_in,
    alu_result_in,
    wr_reg_in,
    RegWrite_in,
    MemtoReg_in,
    ram_out,
    alu_result_out,
    wr_reg_out,
    RegWrite_out,
    MemtoReg_out
);
// Latch to control state between Execution and MEM pipeline stages

input [0:0] clk;
input [0:0] rst;
input signed [31:0] ram_in;
input signed [31:0] alu_result_in;
input signed [31:0] wr_reg_in;
input [0:0] RegWrite_in;
input [0:0] MemtoReg_in;
output signed [31:0] ram_out;
reg signed [31:0] ram_out;
output signed [31:0] alu_result_out;
reg signed [31:0] alu_result_out;
output signed [31:0] wr_reg_out;
reg signed [31:0] wr_reg_out;
output [0:0] RegWrite_out;
reg [0:0] RegWrite_out;
output [0:0] MemtoReg_out;
reg [0:0] MemtoReg_out;






always @(posedge clk, posedge rst) begin: LATCH_MEM_WB_LATCH
    if ((rst == 1)) begin
        ram_out <= 0;
        alu_result_out <= 0;
        wr_reg_out <= 0;
        RegWrite_out <= 0;
        MemtoReg_out <= 0;
    end
    else begin
        ram_out <= ram_in;
        alu_result_out <= alu_result_in;
        wr_reg_out <= wr_reg_in;
        RegWrite_out <= RegWrite_in;
        MemtoReg_out <= MemtoReg_in;
    end
end

endmodule
