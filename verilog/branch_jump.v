// File: branch_jump.v
// Generated by MyHDL 0.7
// Date: Sat Dec 22 13:53:28 2012


module branch_jump (
    branch,
    jump,
    pc,
    baddr,
    jaddr,
    rs,
    out
);
// branch:
// jump:
// pc: pc adder out
// addr:
// out:

input [0:0] branch;
input [0:0] jump;
input [31:0] pc;
input [31:0] baddr;
input [31:0] jaddr;
input [31:0] rs;
output [31:0] out;
reg [31:0] out;

always @(rs, jump, pc, baddr, branch, jaddr) begin: BRANCH_JUMP_LOGIC
    if ((jump == 1)) begin
        case (branch)
            'h1: begin
                out = rs;
            end
            'h0: begin
                out = ((pc & 32'hf0000000) | {jaddr[29:0], 2'h0});
            end
        endcase
    end
    else begin
        out = (pc + baddr);
    end
end

endmodule
