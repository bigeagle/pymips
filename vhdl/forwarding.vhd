-- File: forwarding.vhd
-- Generated by MyHDL 0.6
-- Date: Fri Nov 19 13:13:49 2010

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;
use std.textio.all;

use work.pck_myhdl_06.all;

entity forwarding is
    port (
        RegWrite_mem: in unsigned(0 downto 0);
        Rd_mem: in unsigned(4 downto 0);
        Rs_ex: in unsigned(4 downto 0);
        Rt_ex: in unsigned(4 downto 0);
        RegWrite_wb: in unsigned(0 downto 0);
        Rd_wb: in unsigned(4 downto 0);
        ForwardA: out unsigned(1 downto 0);
        ForwardB: out unsigned(1 downto 0)
    );
end entity forwarding;

architecture MyHDL of forwarding is


begin


FORWARDING_HAZARDS_CONTROL: process (Rs_ex, Rd_wb, RegWrite_wb, RegWrite_mem, Rt_ex, Rd_mem) is
begin
    if ((RegWrite_mem = 1) and (Rd_mem /= 0) and (Rd_mem = Rs_ex)) then
        ForwardA <= "10";
    elsif ((RegWrite_wb = 1) and (Rd_wb /= 0) and (Rd_mem /= Rs_ex) and (Rd_wb = Rs_ex)) then
        ForwardA <= "01";
    else
        ForwardA <= "00";
    end if;
    if ((RegWrite_mem = 1) and (Rd_mem /= 0) and (Rd_mem = Rt_ex)) then
        ForwardB <= "10";
    elsif ((RegWrite_wb = 1) and (Rd_wb /= 0) and (Rd_mem /= Rt_ex) and (Rd_wb = Rt_ex)) then
        ForwardB <= "01";
    else
        ForwardB <= "00";
    end if;
end process FORWARDING_HAZARDS_CONTROL;

end architecture MyHDL;
