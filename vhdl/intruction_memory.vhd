-- File: intruction_memory.vhd
-- Generated by MyHDL 0.6
-- Date: Sun Oct 31 23:05:33 2010

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;
use std.textio.all;

use work.pck_myhdl_06.all;

entity intruction_memory is
    port (
        address: in unsigned(3 downto 0);
        instruction: out unsigned(31 downto 0)
    );
end entity intruction_memory;

architecture MyHDL of intruction_memory is


begin


INTRUCTION_MEMORY_LOGIC: process (address) is
begin
    case to_integer(address) is
        when 0 => instruction <= "01000000001000010000000000000001";
        when 1 => instruction <= "01000000010000100000000000000011";
        when 2 => instruction <= "00000000001000100100000000100000";
        when 3 => instruction <= "00000000000000000000000000000000";
        when 4 => instruction <= "00000000000000000000000000000000";
        when 5 => instruction <= "00000000000000000000000000000000";
        when 6 => instruction <= "00000000000000000000000000000000";
        when 7 => instruction <= "00000000000000000000000000000000";
        when 8 => instruction <= "00000000000000000000000000000000";
        when 9 => instruction <= "00000000000000000000000000000000";
        when 10 => instruction <= "00000000000000000000000000000000";
        when 11 => instruction <= "00000000000000000000000000000000";
        when 12 => instruction <= "00000000000000000000000000000000";
        when 13 => instruction <= "00000000000000000000000000000000";
        when 14 => instruction <= "00000000000000000000000000000000";
        when 15 => instruction <= "00000000000000000000000000000000";
        when 16 => instruction <= "00000000000000000000000000000000";
        when 17 => instruction <= "00000000000000000000000000000000";
        when 18 => instruction <= "00000000000000000000000000000000";
        when 19 => instruction <= "00000000000000000000000000000000";
        when 20 => instruction <= "00000000000000000000000000000000";
        when 21 => instruction <= "00000000000000000000000000000000";
        when 22 => instruction <= "00000000000000000000000000000000";
        when 23 => instruction <= "00000000000000000000000000000000";
        when 24 => instruction <= "00000000000000000000000000000000";
        when 25 => instruction <= "00000000000000000000000000000000";
        when 26 => instruction <= "00000000000000000000000000000000";
        when 27 => instruction <= "00000000000000000000000000000000";
        when 28 => instruction <= "00000000000000000000000000000000";
        when 29 => instruction <= "00000000000000000000000000000000";
        when 30 => instruction <= "00000000000000000000000000000000";
        when others => instruction <= "00000000000000000000000000000000";
    end case;
end process INTRUCTION_MEMORY_LOGIC;

end architecture MyHDL;
