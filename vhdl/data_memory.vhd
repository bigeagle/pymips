-- File: data_memory.vhd
-- Generated by MyHDL 0.6
-- Date: Sat Nov 13 11:40:28 2010

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;
use std.textio.all;

use work.pck_myhdl_06.all;

entity data_memory is
    port (
        clk: in unsigned(0 downto 0);
        address: in unsigned(31 downto 0);
        write_data: in signed (31 downto 0);
        read_data: out signed (31 downto 0);
        memread: in unsigned(0 downto 0);
        memwrite: in unsigned(0 downto 0)
    );
end entity data_memory;

architecture MyHDL of data_memory is

type t_array_mem is array(0 to 1024-1) of signed (31 downto 0);
signal mem: t_array_mem;

begin


DATA_MEMORY_LOGIC: process (clk) is
begin
    if rising_edge(clk) then
        if (memwrite = 1) then
            mem(to_integer(address)) <= write_data;
        elsif (memread = 1) then
            read_data <= mem(to_integer(address));
        end if;
    end if;
end process DATA_MEMORY_LOGIC;

end architecture MyHDL;
